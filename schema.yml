openapi: 3.0.3
info:
  title: devsearchproject API
  version: 1.0.0
  description: complete API for webapp
paths:
  /api/profiles/:
    get:
      operationId: api_profiles_list
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
          description: ''
  /api/profiles/{id}/:
    get:
      operationId: api_profiles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    put:
      operationId: api_profiles_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    patch:
      operationId: api_profiles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
  /api/profiles/{id}/skills/:
    get:
      operationId: api_profiles_skills_list
      description: |-
        Get the skills for the user id send through pk field and only if the user authenticated who send the request
        is the same as the user whose id is send, if the user doesn't have skills then a empty list is sent as a Response.

        Create a skill for the user id send through pk field only if the user authenticated who send the request
        is the same as the user whose id is send

        return status code 201 when success
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill'
          description: ''
    post:
      operationId: api_profiles_skills_create
      description: |-
        Get the skills for the user id send through pk field and only if the user authenticated who send the request
        is the same as the user whose id is send, if the user doesn't have skills then a empty list is sent as a Response.

        Create a skill for the user id send through pk field only if the user authenticated who send the request
        is the same as the user whose id is send

        return status code 201 when success
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skill'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Skill'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Skill'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
          description: ''
  /api/profiles/{id}/skills/{id}/:
    get:
      operationId: api_profiles_skills_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
          description: ''
    put:
      operationId: api_profiles_skills_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skill'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Skill'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Skill'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
          description: ''
    patch:
      operationId: api_profiles_skills_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSkill'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSkill'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSkill'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
          description: ''
    delete:
      operationId: api_profiles_skills_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/projects/:
    get:
      operationId: api_projects_list
      description: Return list of projects posted on the webapp and create a new project
        when request method == POST
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
          description: ''
    post:
      operationId: api_projects_create
      description: Return list of projects posted on the webapp and create a new project
        when request method == POST
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/projects/{id}/:
    get:
      operationId: api_projects_retrieve
      description: Retrieve project data and update or delete project if the user
        sending the request is equal to the project owner
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    put:
      operationId: api_projects_update
      description: Retrieve project data and update or delete project if the user
        sending the request is equal to the project owner
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    patch:
      operationId: api_projects_partial_update
      description: Retrieve project data and update or delete project if the user
        sending the request is equal to the project owner
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProject'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    delete:
      operationId: api_projects_destroy
      description: Retrieve project data and update or delete project if the user
        sending the request is equal to the project owner
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/projects/{id}/vote/:
    post:
      operationId: api_projects_vote_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '201':
          description: No response body
  /api/users/register/:
    post:
      operationId: api_users_register_create
      description: Post a new user
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/token/:
    post:
      operationId: api_users_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/users/token/refresh/:
    post:
      operationId: api_users_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
components:
  schemas:
    PatchedProfile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        skills:
          type: string
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 200
        email:
          type: string
          format: email
          nullable: true
          maxLength: 500
        username:
          type: string
          nullable: true
          maxLength: 200
        location:
          type: string
          nullable: true
          maxLength: 200
        short_intro:
          type: string
          nullable: true
          maxLength: 200
        bio:
          type: string
          nullable: true
        profile_image:
          type: string
          format: uri
          nullable: true
        social_github:
          type: string
          nullable: true
          maxLength: 200
        social_twitter:
          type: string
          nullable: true
          maxLength: 200
        social_linkedin:
          type: string
          nullable: true
          maxLength: 200
        social_youtube:
          type: string
          nullable: true
          maxLength: 200
        personal_website:
          type: string
          nullable: true
          maxLength: 200
        created:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
          nullable: true
    PatchedProject:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        owner:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
          nullable: true
        featured_image:
          type: string
          format: uri
          nullable: true
        demo_link:
          type: string
          nullable: true
          maxLength: 2000
        source_link:
          type: string
          nullable: true
          maxLength: 2000
        vote_total:
          type: integer
          nullable: true
        vote_ratio:
          type: integer
          nullable: true
        created:
          type: string
          format: date-time
          readOnly: true
        tags:
          type: array
          items:
            type: integer
    PatchedSkill:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 200
        description:
          type: string
          nullable: true
    Profile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        skills:
          type: string
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 200
        email:
          type: string
          format: email
          nullable: true
          maxLength: 500
        username:
          type: string
          nullable: true
          maxLength: 200
        location:
          type: string
          nullable: true
          maxLength: 200
        short_intro:
          type: string
          nullable: true
          maxLength: 200
        bio:
          type: string
          nullable: true
        profile_image:
          type: string
          format: uri
          nullable: true
        social_github:
          type: string
          nullable: true
          maxLength: 200
        social_twitter:
          type: string
          nullable: true
          maxLength: 200
        social_linkedin:
          type: string
          nullable: true
          maxLength: 200
        social_youtube:
          type: string
          nullable: true
          maxLength: 200
        personal_website:
          type: string
          nullable: true
          maxLength: 200
        created:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
          nullable: true
      required:
      - created
      - id
      - skills
    Project:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        owner:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
          nullable: true
        featured_image:
          type: string
          format: uri
          nullable: true
        demo_link:
          type: string
          nullable: true
          maxLength: 2000
        source_link:
          type: string
          nullable: true
          maxLength: 2000
        vote_total:
          type: integer
          nullable: true
        vote_ratio:
          type: integer
          nullable: true
        created:
          type: string
          format: date-time
          readOnly: true
        tags:
          type: array
          items:
            type: integer
      required:
      - created
      - id
      - owner
      - title
    Skill:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 200
        description:
          type: string
          nullable: true
      required:
      - id
      - name
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
      required:
      - email
      - id
      - password
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
